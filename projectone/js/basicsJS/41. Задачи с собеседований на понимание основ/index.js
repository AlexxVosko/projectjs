'use strict';

// -- 1) Какое будет выведено значение: let x = 5; alert( x++ ); ?
let x = 5;
alert( x++ );
// Ответ : 5
// Постфиксная форма инкремента после переменнной возвращает исходное значание а затем прибавляет 1

// -- 2) Чему равно такое выражение: [ ] + false - null + true ?
[ ] + false - null + true;
// Ответ : NaN
// Выполнение не математических операций

[ ] + false  // false
typeof([ ] + false); // string
//  когда идет работа с пустым массивом он будет приведен к пустой строке

// -- 3) Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?
let y = 1; 
let z = y = 2; 
alert(z);
// Ответ : 2
// Присваивание идет справа налево 2-> y -> z (последовательное присваивание)

// -- 4) Чему равна сумма [ ] + 1 + 2?
[ ] + 1 + 2
//  Ответ : "12" //srting
// Конкатенация строк (так как пустой массив это строка)

// -- 5) Что выведет этот код: alert( "1"[0])?
alert( "1"[0])
//  Ответ : 1 //srting
alert( "12"[1]);
//  Ответ : 2 //srting
// к каждому элементу строки можно обратиться по его индексу

// -- 6) Чему равно 2 && 1 && null && 0 && undefined ?
2 && 1 && null && 0 && undefined
// Ответ : null //  так как первый из false
// !!! Оператор && всегда запинается на false, идет слева направо

// -- 7) Есть ли разница между выражениями? !!( a && b ) и (a && b)?
!!( a && b ) === (a && b) // false
// Ответ : Не равны
// !! превращает выражение в boolean. и оно уже не будет равно значению из переменных

// -- 8) Что выведет этот код: alert( null || 2 &&  3 || 4 ); ?
                //3
alert( null || 2 && 3 || 4 )
// Ответ : 3
// Оператор && имеетболее высокий приоритет, поэтому будет выполняться первее
// !!! Оператор || запинается на true

// -- 9) a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?
a = [1, 2, 3];
b = [1, 2, 3];
a == b  // false
// Ответ : Нет
// Два хранилища информации которые просто содержат одинаковые данные (2 ящика с яблоками не равны друг другу )

// -- 10) Что выведет этот код: alert( +"Infinity" );
alert( +"Infinity" ); 
// Ответ : выведет "Infinity"
console.log(typeof(+"Infinity"));
// а так будет number так как унарный плюс +

// -- 11) Верно ли сравнение: "Ёжик" > "яблоко"?
"Ёжик" > "яблоко" // false
// Ответ : Нет
// Посимвольное сравнение строк (см таблицу символов Unicode по приоритетам)

// -- 12) Чему равно 0 || "" || 2 || undefined || true || falsе ?
0 || "" || 2 || undefined || true || falsе
// Ответ : 2
// см задачу 8
