
//Если функции идут одна за другой, это не значит что они будут выполняться также
//Callback - это функция которая должна быть выполнена после того как другая завершила свое выполнение
//Callback функции позволяют быть уверенными в том что определенный код не начнет исполнение до того момента пока другой код не завершит свое исполнение

'use_strict';

function first(){
    // Do something
    setTimeout(function(){
        console.log(1);
    },500);
}

function second(){
    console.log(2);
}

first();
second();

// Шаблон  Сallback функции
// в функцию в качестве аргумента передается другая функция
// таким образом соблюдается последовательность выполнения функций
function learnJS(lang,callback){
    console.log(`Я учу ${lang}`);
    callback();
}
// аргумент - анонимная функция
learnJS('Javascript', function(){
    console.log(`Я прошел этот урок`);
});

//или
function done(){
    console.log(`Я прошел этот урок`);
}
learnJS('Javascript', done); // без () - так как передается просто функция (не вызов)


