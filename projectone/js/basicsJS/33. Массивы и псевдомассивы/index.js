'use_strict';

const arr = [1,2,3,6,8];

// Метод удаления последнего элмента массива
arr.pop();

// Метод добавления в конец массива
arr.push(10);

//  Метод удаления элемента в начале массива
arr.shift();

//  Метод добавления элемента в начале массива
arr.unshift(0);

//! в двух последних методах нужно поменять индекс (поэтому используются редко)

//чтобы перебрать массив используется цикл for
// ++ можно использовать break, continue
for(let i=0; i<arr.length; i++){
    console.log(arr[i]);
}

// или конструкцию for .. of (но работает только с массиво подобными сущностями (строки, массивы, псевдомассивы, map, set, элементы со страницы))
for( let value of arr){
    console.log(value);
}

// Как соотносится между собой св-во lenght и порядковые номера внутри этого массива?
// length св-во состоит из последнего индекса который есть в массиве + 1
console.log(arr.length);
// Исключение из правил: 
arr[99]=0; // длина массива уже будет 100

// Метод forEach
//позволяет гибко перебрать все элементы внутри массива + callback-функция
// 1 аргумент (item) - элемент который перебирается
// 2 аргумент (i) - номер по порядку
// 3 аргумент (arr)- ссылка на массив который перебирается
arr.forEach(function(item,i,arr){
    console.log(`${i}: ${item} внутри массива ${arr}`);
})

//Методы трансформации массива (возвращает новый массив, с модифицированными элементами)
//arr.map; arr.every/arr.some; arr.filter; arr.reduce;

// split() из строки в масиив по разделителю
const str = prompt("","");
const products = str.split(", "); // ;  и т/д

// sort() метод сортировки по алфавиту (!только строки, но не числа)
products.sort();

//!!! чтобы отсортировать числа
function compareNum(a,b){
    return a-b;
}
arr.sort(compareNum);

// join() из массива в строку по разделителю
products.join('; ');


// -- Псевдомассивы -- 
// Псевдомассив — это объект, который структурно похож на массив. То есть у него есть числовые свойства (индексы) и свойство length.
// структура которая хранит данные по порядку
// не имеют методов 