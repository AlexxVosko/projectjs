/* Задание на работу  с функциями */

/*<p>1) Создайте функцию, которая будет на вход принимать 1 аргумент с именем человека и <strong>возвращать</strong> строку. </p>
<p>Пример: вызов функции
    <code>sayHello('Антон')</code>
     <strong>возвращает</strong> строку <em>"Привет, Антон!". </em>
     В решении вызывать функцию <strong>не нужно</strong>, программа сделает это за вас.</p>
<p>P.S. возвращать - это использовать ключевое слово return. </p>
<p>P.S.S. Это классическая функция-модификатор, которых мы дальше по курсу будем создавать еще много в разных видах.</p>
*/


function sayHello(name) {
    return `Привет, ${name}!`;
}


/*
<p>2) Создайте функцию, которая принимает в себя 1 аргумент в виде целого числа и <strong>возвращает</strong> массив из трех чисел: одно на 1 меньше, сам аргумент, и число на 1 больше.</p>
<p>Пример: вызов функции <code>returnNeighboringNumbers(5)</code> <strong>возвращает</strong> массив в виде [4, 5, 6]. </p>
*/

function returnNeighboringNumbers(num) {
        return [num-1,num,num+1];
}


/*
<p>3) Создайте функцию, которая будет принимать в себя <strong>2</strong> аргумента, оба числа. Первое число - это база, второе число - это сколько раз нужно будет повторить это число в прогрессии. (Смотри пример ниже). Функция должна возвращать <strong>строку (или число в особых случаях, о которых ниже)</strong>, где эти числа идут по порядку, разделенные тремя дефисами "---". После последнего числа их <strong>не должно</strong> быть. </p>
<p>Если второй аргумент <strong>не является</strong> числом, <strong>равен</strong> или <strong>меньше</strong> нуля - то возвращать просто первый аргумент. (Проверяем через оператор typeof)</p>
<p>Вызов функции <code>getMathResult(5, 3)</code> даст ответ 5---10---15</p>
<p>Вызов функции <code>getMathResult(3, 10)</code> даст ответ 3---6---9---12---15---18---21---24---27---30</p>
<p>Вызов функции <code>getMathResult(20, -5)</code> даст ответ 20</p>
*/

function getMathResult(a,b) {
    if(typeof(b)!=='number' || b===0 || b<0) {
        return a;
    }

        let result ='';
        for(let i=1;i<=b,i++;){
            if(i===b){
              result+=`${a *i}`;
            }else{
              result+=`${a *i}---`;
            }
        }
        return result;

}
getMathResult(3, 10);
getMathResult(20, -5)