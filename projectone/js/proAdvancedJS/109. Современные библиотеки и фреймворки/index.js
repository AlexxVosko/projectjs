
// Инструменты для решения какй либо задачи заказчика

// Фреймворк - готовое решение, участки кода кем то написанные
// При подключении к проекту диктует свои правила, как именно создавать проект
// Нельзя отклоняться от структуры проекта/коспонентов
// Можно создавать приложения которые работают внутри браузеров

// Single Page Application (SPA) - работают в браузере как самые обычные приложения
// Приложение на на одной вкладке на котрой можно работать бесконечно (без перезагрузки страницы)
// Figma / Google почта и т/д


//  -- Angular -- 
    // JS фреймворк основанный на TypeScript - разработчик Google
    // TypeScript - подвид JS c изменненным синтексисом но все равно конечная компиляция в обычный JS
    // Можно писать на чистом JS и Angular будет работать
    // Производительность - самый тяжелый из всех 
    // Порог вхождения - самый высокий
    // Для больших и сложных приложений - тенденция разрастания

    // - ЧТО НЕОБХОДИМО ВЫУЧИТЬ ДЛЯ РАБОТЫ С ANGULAR -
        // 1) Node.js (должны хотя бы установить)
        // 2) TypeScript 
        // 3) Webpack
        // 4) MVC pattern (шаблон проектирования для создания приложений)
            // разделяет логику приложения на визуальную/контролирующую/выполняющую
        // 5) Angular-документация


//  -- Vue.js -- 
    // Самый простой в обучении

    // - ЧТО НЕОБХОДИМО ВЫУЧИТЬ ДЛЯ РАБОТЫ С VUE.JS -
        // 1) Node.js (должны хотя бы установить)
        // 2) Webpack
        // 4) Vue-документация


// Библиотека - более гибкое понятие, готовое решение при подключении использование на свое усмотрение
// формируется любая структура папок и файлов,  берем только необходимые функции и как то их используем
// Использование библиотеки ни к чему не обязывает
// Чаще всего направлена на решение какой то одной задачи

//  -- React --
    //Использует компинацию скрипта вместе с версткой - препроцессор JSX
    // Разработчик фейсбук

    // - ЧТО НЕОБХОДИМО ВЫУЧИТЬ ДЛЯ РАБОТЫ С REACT -
        // 1) Node.js (должны хотя бы установить)
        // 2) Препроцессор JSX
        // 3) Трансплиттер Babel
        // 4) Webpack
        // 5) React-документация

// Axios



