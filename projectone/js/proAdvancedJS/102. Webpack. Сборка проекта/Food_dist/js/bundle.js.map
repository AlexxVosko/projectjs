{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mCAAmC,UAAU,MAAM,SAAS;AAC5D,0DAA0D,WAAW;AACrE,wDAAwD,WAAW;AACnE;AACA;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,IAAI,YAAY,YAAY;AAC9E;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,+BAA+B,6BAA6B;AAC5D;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA,iBAAiB;AACjB,eAAe,EAAE;AACjB;;AAEA;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA,iCAAiC;AACjC;;;AAGA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;;AAEA,yBAAyB;AACzB,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;;;;;;;;;ACvGA;;AAEA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;;AAGA;;AAEA;AACA,KAAK,EAAE,UAAU,GAAG;;AAEpB;AACA;AACA,kHAAkH;AAClH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,SAAS,MAAM;AACf;AACA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,yBAAyB;AACzB;AACA,SAAS,MAAM;AACf;AACA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yDAAyD,OAAO,MAAM;;AAEtE;;AAEA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;;;;;;;;;;;ACpKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;;;;;;;;;;ACnDA;AACA;;AAEA,kCAAkC;;AAElC;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;UCrEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;;AAEb;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,iBAAiB,mBAAO,CAAC,4CAAgB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,CAAC,E","sources":["webpack://projectjs-main/./js/modules/calc.js","webpack://projectjs-main/./js/modules/cards.js","webpack://projectjs-main/./js/modules/forms.js","webpack://projectjs-main/./js/modules/modal.js","webpack://projectjs-main/./js/modules/slider.js","webpack://projectjs-main/./js/modules/tabs.js","webpack://projectjs-main/./js/modules/timer.js","webpack://projectjs-main/webpack/bootstrap","webpack://projectjs-main/./js/script.js"],"sourcesContent":["function calc (){\n    // -- Calculator -- //\n\n    const result = document.querySelector('.calculating__result span');\n    let sex, height, weight, age, ratio;\n\n    //проверка из localStorage\n    if(localStorage.getItem('sex')){\n        sex = localStorage.getItem('sex');\n    }else{\n        sex = 'female';\n        localStorage.setItem('sex','female');\n    }\n    if(localStorage.getItem('ratio')){\n        ratio = localStorage.getItem('ratio');\n    }else{\n        ratio = 1.375;\n        localStorage.setItem('ratio', 1.375);\n    }\n\n    //инициализация активности из localStorage\n    function initLocalSettings(selector,activeClass){\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach(elem=>{\n            elem.classList.remove(activeClass);\n            if(elem.getAttribute('id') === localStorage.getItem('sex')){\n                elem.classList.add(activeClass);\n            }\n            if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){\n                elem.classList.add(activeClass);\n            }\n        });\n    }\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\n\n    // общая функция подсчетов\n    function calcTotal(){\n        //проверка на заполненность всех данных\n        if (!sex || !height || !weight || !age || !ratio) {\n            result.textContent = '____'; \n            return;\n        }\n        if (sex === 'female') {\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\n        } else {\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n        }\n        console.log(result);\n    }\n    calcTotal();\n\n    //функция получени данных из div + выставление активности\n    function getStaticInformation(selector, activeClass) {\n        const elements = document.querySelectorAll(selector); // получение элементов по родителю\n        //отслеживание событий по родителю (делегирование событий)\n\n        elements.forEach(elem => {\n            elem.addEventListener('click', (e) => {\n                if (e.target.getAttribute('data-ratio')) {\n                    ratio = +e.target.getAttribute('data-ratio');\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\n                } else {\n                    sex = e.target.getAttribute('id');\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\n                }\n                //настройка активности\n                elements.forEach(elem => {\n                    elem.classList.remove(activeClass);\n                });\n    \n                e.target.classList.add(activeClass);\n    \n                calcTotal();\n            });\n        });\n    }\n\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\n\n    //функция обработки input калькулятора\n    function getDynamicInformation(selector) {\n        const input = document.querySelector(selector);\n        //проверка на конкретный input по id\n        input.addEventListener('input', () => {\n            // проверка на ввод\n            if(input.value.match(/\\D/g)){ //если не число\n                input.style.border = '1px solid red';\n            }else{\n                input.style.border = 'none';\n            }\n\n\n            switch(input.getAttribute('id')) {\n                case \"height\":\n                    height = +input.value;\n                    break;\n                case \"weight\":\n                    weight = +input.value;\n                    break;\n                case \"age\":\n                    age = +input.value;\n                    break;\n            }\n            calcTotal();\n        });\n    }\n    getDynamicInformation('#height');\n    getDynamicInformation('#weight');\n    getDynamicInformation('#age');\n\n\n}\n\nmodule.exports = calc;","function cards(){\n    \n        // -- Используем классы для карточек -- //\n        class MenuCard {\n            constructor (src,alt,title,descr,price,parentSelector,...classes){\n                this.src=src;\n                this.alt=alt;\n                this.title=title;\n                this.descr=descr;\n                this.price=price;\n                this.parent=document.querySelector(parentSelector);\n                this.classes = classes; //массив\n                this.transfer=2.61;\n                this.changeToBYN();\n            }\n    \n            changeToBYN(){\n                this.price = parseFloat(this.price*this.transfer).toFixed(2);\n            }\n    \n            //Формирование верстки\n            render(){\n                const element = document.createElement('div');\n    \n                // проверка если в rest ничего не передано\n                if(this.classes.length===0){\n                    this.element = 'menu__item'\n                    element.classList.add(this.element);\n                }else{\n                    this.classes.forEach(className=>element.classList.add(className));\n                }\n    \n                element.innerHTML=`\n                        <img src=${this.src} alt=${this.alt}>\n                        <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                        <div class=\"menu__item-descr\">${this.descr}</div>\n                        <div class=\"menu__item-divider\"></div>\n                        <div class=\"menu__item-price\">\n                            <div class=\"menu__item-cost\">Цена:</div>\n                            <div class=\"menu__item-total\"><span>${this.price}</span> BYN/день</div>\n                        </div>\n                `;\n                this.parent.append(element);\n            }\n        }\n    \n    \n        // .ok - свойство, успешен ли запрос\n        // .status - свойство, статус сервера\n    \n        const getResource = async (url) => {\n            const res = await fetch(url);\n    \n             // обработка ошибок http\n            if(!res.ok){\n               throw new Error(`Could not fetch ${url}, status: ${res.status} `);\n            }\n            return await res.json(); //  промис\n        };\n    \n        getResource('http://localhost:3000/menu')\n            .then(data=>{\n                data.forEach(({img,altimg,title,descr,price}) =>{\n                    new MenuCard(img,altimg,title,descr,price,'.menu .container').render();\n                });\n            });\n    \n         /*axios.get('http://localhost:3000/menu')   \n              .then(data=>{\n                data.data.forEach(({img,altimg,title,descr,price}) =>{\n                    new MenuCard(img,altimg,title,descr,price,'.menu .container').render();\n                });\n              });*/\n}\n\nmodule.exports = cards;","function forms(){\n    // -- Forms -- //  \n    // Просмотр отправки в браузере\n    // Network -> файл сервера (serever.php) -> табы (Headers, PayLoad)\n    // Контроль загрузки интернета \n    //Network -> вкладка Online\n\n    const forms = document.querySelectorAll('form');\n    const mess = {\n        loading:'img/spinner.svg',\n        success:'Форма успешно отправлена!',\n        fail:'Что то пошло не так'\n    };\n\n\n  \n    const postData = async (url,data) => {\n        //помещаем в переменную проимис от фетча\n        const res = await fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type':'application/json'\n            },\n            body:data\n        });\n\n        // !асинхронный код\n        // необходимо дождаться ответа сервера а потом только возвращать значение\n        return await res.json(); //  промис\n    };\n\n\n    forms.forEach(item=>{\n        bindPostDataJson(item);\n    });\n    //Если форма должна принимать в JSON\n\n    function bindPostDataJson(form){\n        form.addEventListener('submit',(e)=>{\n            e.preventDefault();\n\n            // Изображние загрузки\n            const statusMessage = document.createElement('img');\n            statusMessage.src = mess.loading;\n            statusMessage.style.cssText = `\n                display:block;\n                margin:0 auto;\n            `;\n            form.insertAdjacentElement('afterend', statusMessage); // вместо append\n            const formData = new FormData(form);\n\n            const obj = {a:23, b:50 };\n            console.log(Object.entries(obj)); // [ [ 'a', 23 ], [ 'b', 50 ] ]\n\n            // formData - собираем все данные с формы\n            // formData.entries() превращаем в массив массивов\n            // Object.fromEntries затем превращаем в классический объект\n            // JSON.stringify а затем классический объект превращаем в json\n            // json отправляем на сервер\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\n\n           \n            //postData('server.php',JSON.stringify(object))\n            postData('http://localhost:3000/requests',json)\n            //.then(data=>data.text())\n            .then(data=>{\n                console.log(data); //Response\n                showThanksModal(mess.success);\n                statusMessage.remove();\n            }).catch(()=>{\n                showThanksModal(mess.fail);\n            }).finally(()=>{\n                form.reset();\n            });\n        });\n    }\n\n    // Блок оповещения пользователя\n    function showThanksModal(message){\n        const prevModalDialog = document.querySelector('.modal__dialog');\n\n        prevModalDialog.classList.add('hide');\n        openModel();\n\n        const thanksModal = document.createElement('div');\n        thanksModal.classList.add('modal__dialog');\n        thanksModal.innerHTML = `\n            <div class=\"modal__content\">\n                <div class=\"modal__close\" data-close>×</div>\n                <div class=\"modal__title\">${message}</div>\n            </div>\n        `;\n\n        document.querySelector('.modal').append(thanksModal);\n        setTimeout(()=>{\n            thanksModal.remove();\n            prevModalDialog.classList.add('show');\n            prevModalDialog.classList.remove('hide');\n            closeModal();\n        },4000);\n    }\n}\n\nmodule.exports = forms;","function modal(){\n\n  // -- Modal -- //\n  const modalTrigger = document.querySelectorAll('[data-modal]'), //  кнопки\n        modal = document.querySelector('.modal'); // само окно\n\n  function openModel(){\n   //1)  способ\n       modal.classList.add('show');\n       modal.classList.remove('hide');\n\n  //2)  способ\n     //modal.classList.toggle('show');\n     document.body.style.overflow = 'hidden'; // отмена прокрутки\n     clearInterval(modalTimerId);\n }\n  modalTrigger.forEach(btn =>{\n      btn.addEventListener('click', openModel);\n  });\n\n  function closeModal(){\n      //modal.classList.add('hide');\n      //modal.classList.remove('show');\n      modal.classList.toggle('show');\n      document.body.style.overflow = '';\n\n      //если пользователь сам нажал то удалять таймер\n      clearInterval(modalTimerId);\n  }\n \n\n\n  modal.addEventListener('click',(e)=>{\n      // отслеживание клика пользователя (закрытие по подложке)\n      if(e.target === modal || e.target.getAttribute('data-close')==\"\"){\n          closeModal();\n      }\n  });\n\n  // отслеживание нажатия кнопки пользователя (закрытие по кнопке esc)\n  document.addEventListener('keydown',(e)=>{\n      if(e.code === 'Escape' && modal.classList.contains('show')){\n          closeModal();\n      }\n  });\n\n  const modalTimerId = setTimeout(openModel,50000);\n\n\n  // если пользователь долистал до конца - показать модальное окно\n\n  window.addEventListener('scroll', showModalByScroll);\n  //},{once:true}); // как вариант но не всегда подходит\n\n  // функция всплытия модального окна только один раз при прокрутке вниз\n  function showModalByScroll(){\n      if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight-1){  // прокрученная часть + видимая часть окна  >= полная высота всей страницы\n          openModel();\n          window.removeEventListener('scroll', showModalByScroll);\n      }\n  }\n}\nmodule.exports = modal;","function slider(){\n    // -- Slider -- //\n    const slides = document.querySelectorAll('.offer__slide'), // опредение слайда\n          prev = document.querySelector('.offer__slider-prev'),\n          next = document.querySelector('.offer__slider-next'),\n          total = document.querySelector('#total'), // нумерация\n          current = document.querySelector('#current'), // текущий слайд\n\n          slidesWrapper = document.querySelector('.offer__slider-wrapper'), // обертка\n          slidesField = document.querySelector('.offer__slider-inner'), // поле со слайдами\n          // получение ширины текущего слайда \n          //(через ComputedStyle - примененные стили к началу загрузки страницы из файла стилей)\n          width = window.getComputedStyle(slidesWrapper).width,\n         \n          slider = document.querySelector('.offer__slider'),\n          // обертка для всех точек\n          dots = document.createElement('ol'),\n          dotsArray = [];\n\n    let slideIndex = 1,\n        offset = 0; // на сколько нужно отступить\n\n   // подстановка 0 в общую нумерацию \n    //функция проверки нумерации\n    function getNum(length,tot,cur){\n        if(slides.length < 10){\n            if(tot!=\"\"){\n                total.textContent = `0${slides.length}`;\n            }\n            current.textContent = `0${slideIndex}`;\n         }else{\n            if(tot!=\"\"){\n                total.textContent = slides.length;\n            }\n            current.textContent = {slideIndex};\n        }\n    }\n    getNum(slides.length,total,current);\n\n    //функция активности точек\n    function dotsActive(arr,index){\n        arr.forEach(dot=>dot.style.opacity = '.5');\n        arr[index-1].style.opacity = 1;\n    }\n\n     //функция модификации строки\n    function replaceWidth(str){\n       return +str.replace(/\\D/g,'');\n    }\n\n\n    // установка ширины (поместить все слайды)\n    slidesField.style.width = 100 * slides.length + '%';\n    slidesField.style.display = 'flex';\n    slidesField.style.transition = 'all 0.5s';\n\n    slidesWrapper.style.overflow = 'hidden';\n    // установка ширины для каждого слайда\n    slides.forEach(slide=>{\n        slide.style.width = width;\n    });\n\n    slider.style.position = 'relative';\n    dots.classList.add('carousel-indicators');\n    dots.style.cssText =`\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 15;\n        display: flex;\n        justify-content: center;\n        margin-right: 15%;\n        margin-left: 15%;\n        list-style: none;\n    `;\n    slider.append(dots);\n\n    // создание точек от количества слайдов\n    for(let i = 0; i < slides.length; i++){\n        const dot = document.createElement('li');\n        dot.setAttribute('data-slide-to', i + 1);\n        dot.style.cssText = `\n            box-sizing: content-box;\n            flex: 0 1 auto;\n            width: 30px;\n            height: 6px;\n            margin-right: 3px;\n            margin-left: 3px;\n            cursor: pointer;\n            background-color: #fff;\n            background-clip: padding-box;\n            border-top: 10px solid transparent;\n            border-bottom: 10px solid transparent;\n            opacity: .5;\n            transition: opacity .6s ease;\n        `;\n\n        if(i==0){\n            dot.style.opacity = 1;\n        }\n        dots.append(dot);\n        dotsArray.push(dot);\n\n    }\n    next.addEventListener('click',()=>{\n        // при нажатии на кнопку необходимо сдвинуть слайд\n        // движение вправо\n        // в переменной width = '500px' - необходимо трансформировать в число\n        if(offset == replaceWidth(width) * (slides.length - 1)){ // условия для последнего слайда\n            offset = 0;\n        }else{ // если не последний слайд - добавить смещение\n            offset += replaceWidth(width);\n        }\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if(slideIndex==slides.length){\n            slideIndex=1;\n        }else{\n            slideIndex++;\n        }\n\n        getNum(slides.length,'',current);\n\n        //установка активности точек\n        dotsActive(dotsArray,slideIndex)\n    });\n    // для кнорки назад операции противоположные\n    prev.addEventListener('click',()=>{\n        if(offset == 0){ // проверка на первый слайд\n            offset = replaceWidth(width) * (slides.length - 1);\n        }else{ // если не последний слайд - добавить смещение\n            offset -= replaceWidth(width);\n        }\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if(slideIndex==1){\n            slideIndex = slides.length;\n        }else{\n            slideIndex--;\n        }\n\n        getNum(slides.length,'',current);\n\n       //установка активности точек\n       dotsActive(dotsArray,slideIndex)\n    });\n\n    // обработчик события для каждой точки\n    dotsArray.forEach(dot=>{\n        dot.addEventListener('click',(e) => {\n            const slideTo = e.target.getAttribute('data-slide-to');\n\n            slideIndex = slideTo;\n\n            offset = replaceWidth(width) * (slideTo - 1);\n            slidesField.style.transform = `translateX(-${offset}px)`; // смещение\n\n            getNum(slides.length,'',current);\n\n            dotsActive(dotsArray,slideIndex)\n        });\n    });\n}\n\nmodule.exports = slider;","\nfunction tabs(){\n    // -- Tabs -- //\n    const tabs = document.querySelectorAll('.tabheader__item'),\n          tabsContent = document.querySelectorAll('.tabcontent'),\n          tabsParent = document.querySelector('.tabheader__items');\n\n    // функция скрытия табов\n    function hideTabContent(){\n        tabsContent.forEach(item=>{\n            item.style.display = 'none';\n            item.classList.add('hide');\n            item.classList.remove('show','fade');\n        });\n        tabs.forEach(tab=>{\n            tab.classList.remove('tabheader__item_active');\n\n        });\n    }\n\n    //функция показа табов\n    // если функция вызывается без аргумента, то по умолчанию можно выставить i=0\n    function showTabContent(i=0){\n        tabsContent[i].style.display = 'block';\n        tabsContent[i].classList.add('show', 'fade');\n        tabsContent[i].classList.remove('hide');\n\n\n        tabs[i].classList.add('tabheader__item_active');\n\n    }\n\n    hideTabContent();\n    showTabContent();\n\n    // обработчик меню\n\n    tabsParent.addEventListener('click',(e)=>{\n        const target = e.target;\n\n        if(target && target.classList.contains('tabheader__item')){\n            tabs.forEach((item,i)=>{\n                if(target == item){\n                    hideTabContent();\n                    showTabContent(i);\n                }\n            });\n        }\n    });\n}\n\nmodule.exports = tabs;","function timer (){\n    // -- Timer -- //\n\n    const deadline ='2022-05-12'; // отправная точка\n\n    //разница между deadline и текущим временем\n    function getTimeRemaining(endtime){\n        const t = Date.parse(endtime) - Date.parse(new Date()); //количество мс\n        let days,hours,minutes,seconds;\n        if(t <= 0){\n            days = 0;\n            hours = 0;\n            minutes = 0;\n            seconds = 0\n        }else{\n            days = Math.floor(t/(1000*60*60*24)), \n            hours = Math.floor(t/(1000*60*60) % 24),  \n            minutes = Math.floor((t/1000/60) % 60), \n            seconds = Math.floor((t/1000) % 60);  \n        }\n            //объект\n            return {\n                'total':t,\n                'days': days,\n                'hours': hours,\n                'minutes': minutes,\n                'seconds': seconds,\n            };\n    }\n\n    // добовлять 0 в если меньше 10\n    function getZero(num){\n        if(num>=0 && num<10){\n            return `0${num}`;\n        }else{\n            return num;\n        }\n    }\n\n    // установка таймера на странице\n    function setClock(selector,endtime){\n        const timer = document.querySelector(selector),\n           days = document.querySelector('#days'),\n           hours = document.querySelector('#hours'),\n           minutes = document.querySelector('#minutes'),\n           seconds = document.querySelector('#seconds'),\n           timeInterval = setInterval(updateClock,1000);\n\n        // решение мигание верстки\n        updateClock();   \n\n        // обновление таймера\n        function updateClock(){\n            const t = getTimeRemaining(endtime);\n\n            days.innerHTML = getZero(t.days);\n            hours.innerHTML = getZero(t. hours);\n            minutes.innerHTML = getZero(t.minutes);\n            seconds.innerHTML = getZero(t.seconds);\n\n            if(t.total<=0){\n                clearInterval(timeInterval);\n            }\n        }\n }\n\n setClock('.timer',deadline);\n}\n\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\n\nwindow.addEventListener(\"DOMContentLoaded\",()=>{\n    const tabs = require('./modules/tabs'),\n          modal = require('./modules/modal'),\n          timer = require('./modules/timer'),\n          slider = require('./modules/slider'),\n          forms = require('./modules/forms'),\n          cards = require('./modules/cards'),\n          calc = require('./modules/calc');\n\n    tabs();\n    modal();\n    timer();\n    cards();\n    calc();\n    forms();\n    slider();\n\n\n});"],"names":[],"sourceRoot":""}