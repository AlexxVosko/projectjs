
// Регулярные выражения позволяют удобно работать со строками
// удалять, заменять части слов, искать кусочки строк, ограничение знаков

// Регулярные выражения состоит их двух частей
// 1 - паттерн - шаблон (что искать, что удалить в строке) ограничивающий список символов 

// /./ - все элементы в строке
// /\./ для того что выбрать знак точки '.' -  использовать экранирование
// /\\/ - найти в строке обратный слэш
// /\^/ ; /\&/ ; /\|/

// 2 - флаги - ищут в строке все вхождения искомого значения
// флаг 'i' - поиск вне зависимости от регистра
// флаг 'g' - поиск нескольких вхождений
// флаг 'm' - включение многострочного режима
// можно комбинировать  /n/igm;

// --  Создание реулярых выражений --  //

// 1 способ (Конструктор) RegExp - Regular Expression
    new RegExp('pattern', 'flags');

// 2 способ
    // /pattern/flags

// -- Методы -- //

    //1) - Метод search (простой поиск)
    const ans = prompt('Введите ваше имя');

    //найти в строке все буквы 'n'
    const reg = /n/;
    console.log(ans.search(reg)); // покажет первую позицию вхождения (Ann -> 1)
    // если в строке не будет искомого значения то получим '-1'

    // найти в строке все буквы 'n' в не зависимости от регистра 
    const regI = /n/i;
    console.log(ans.search(regI)); //(ANN -> 1)


    //2) - Метод match (улучшенный поиск)
    const regG = /n/ig;
    console.log(ans.match(regG)); //получим массив данных (искомое значение, позиция вхождения, сама строка в которой был совершен поиск)
    // если используем флаг глобальности  - получим массив со всеми найденными результатами (ANN -> ['N','N'])


    //3) - Метод replace - поиск и замена 
    // 1 аргумент - что заменяем
    // 2 аргумент - на что заменяем
    const pass = prompt('Введите ваш пароль');
    console.log(pass.replace(/\./g,'*'));

    console.log('12-34-56'.replace(/-/g,':')); // заменить - на :

    //4) - Метод test
    // метод относится к регулярным выражениям
    // - есть ли в строке которая передается в test что то похожее в паттерне внутри регулярки
    // возращает либо true либо  false
    const regT = /n/ig;

    console.log(regT.test('Ann')); // true


    // но в основном ищут целый класс символов (цифры,слова,пробелы)

// -- Классы регулярных выражений -- //
    //1) \d (digits) - ищем цифры
    //2) \w (word) - ищем все слова/буквы
    //3) \s (spaces) - ищем пробелы

    const regNum = /\d/;
    console.log('nsbdfg235s'.match(regNum)); //[ '2', index: 6, input: 'nsbdfg235s', groups: undefined ]
    const regNum2 = /\d/g;
    console.log('200px'.match(regNum2)); //[ '2', '0', '0' ]

    const str = 'My name is R2D2';
    console.log(str.match(/\w\d\w\d/i)); //[ 'R2D2', index: 11, input: 'My name is R2D2', groups: undefined ]


// -- Обратные классы регулярных выражений -- //
    //1) \D (digits) - поиск не чисел
    //2) \W (word) - поиск не слов/букв
    //3) \S (spaces) -  поиск не пробелов

    console.log(str.match(/\W/ig)); //[ ' ', ' ', ' ' ]
    console.log(str.match(/\D/ig)); //['M', 'y', ' ', 'n','a', 'm', 'e', ' ','i', 's', ' ', 'R','D']