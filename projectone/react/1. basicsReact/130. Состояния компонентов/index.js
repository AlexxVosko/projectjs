
// Компонент с динамическим изменением

// счетчик
// https://codepen.io/sedlukha/pen/jdPMEq

// слайдер
// https://codepen.io/suez/pen/OjGQza

// Если на странице будет несколько компонентов счетчиков или слайдеров
// как отслеживать текущие состояние для каждого? активное значение

// Состояние компонента (State) - динамичекая сущность внутри таких компонентов 
// (объект) описывающий динамические вещи которые будут в компоненте

//  -- Состояния в классовых компонентах --

import {Comonent} from  'react';
import './App.css';

// при вызова классового компонента сосздается экземпляр
// чтобы передать в класс пропсы необходимо и спользовать конструктор


class WhoAmI extends Comonent {
    constructor (props){
        super(props);
        this.state = {
             years : 29,
             text: '+++'
        }
    }

    // напрямую изменить нельзя
    // изменение состояния - setState 
    // у каждого отдельного элемента будет меняться в независимо друг от друга
    // при запуске setState  - запуск перерисовки всего компонента с новым состоянием  (вызов метода render() )
    //!!! меняет только то что указано не затрагивая другие свойства объекта

    nextYearOld = () => {
        this.setState({
            years: this.state.years + 1
        });
    }
    // Нюансы
    // команда setState выполняется асинхронно (и как вариант сбите счетчика)
    // чтобы решить данную проблему нужно передавать в коллбэк предедущую отработку функции
    nextYear = () => {
        // в setState передается функция с аргументом state (текущая на данный момент состояние)
        // эта функция возвращает другой объект (return  можно не писать если обернуто в () ) 
        this.setState(state => ({
            years: state.years + 1
        }));
    }

    render() {
        const {name, surname,link} = this.props;
        return(
            <div>
                <button onClick={this.nextYear}>{this.state.text}</button> 
                <h1>My name is {name}, surname - {surname}, age - {this.state.years}</h1>
                <a href={link}>My profile</a>
            </div>
        )
    }

}

function App (){
    return (
        <div className="App">
            <WhoAmI name='Alex' surname="Vosko" link="linkedin.com" />
            <WhoAmI name='John' surname="Smith" link="facebook.com" />
        </div>
    )
}

// Итог 
// 1) у компонента может быть внутреннее состояние, которое динамически меняется
// 2) может быть как у классовых так и у функциональных компонентов
// 3) State напрямую менять нельзя только через команду setState
// 4) setState - асинхронная операция / если нужна точность передавать в коллбэк
// 5) можем менять только те св-ва объекта состояния которые намм необходимы