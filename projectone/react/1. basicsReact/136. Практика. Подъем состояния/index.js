
// Подъем состояния - прием когда внутреннее состояние одного компонента поднимаем выше иерархии
// Данные поднять наверх
// app.js -  источник истины / так как контролирует вообще все


// Алгоритм
// Нужно взять объект с которым работает пользователь
// Сделать копию
// Поменять в нем определенное св-во 
// Создать новый state
// Поменять в компоненте


onToggleIncrease = (id) =>{

    // 1  способ
    console.log(`Increase this ${id}`);
     this.setState(({data}) =>{
        const index = data.findIndex(elem => elem.id === id);
        const old = data[index];
        // все св-ва из old развернуться и сформируют новый объект
        // написанное после запятой - если свойства совпадают то будут заменяться
        const newItem = {...old, increase: !old.increase}; 
        const newArr = [...data.slice(0, index), newItem , ...data.slice(index+1)];
        return {
            data: newArr
        }
      })
    // 2 способ
      // Возвращаем новый объект у которого св-во data
      // в котором формируется новый массив data.map через колбэк функцию которая находится внутри
      // при переборе если есть совпадение id - возвращаем новый объект с изменненным item.increase на противоположное
      // если условием не совпало возвращается объект item
      // как итог получим массив объектов с новым измененным значением
      this.setState(({data}) => ({
          data: data.map(item => {
            if(item.id === id ){
              return {...item, increase: !item.increase}
            }
            return item;
          })
      }))

  }