
// При вызове метода из конструктора в классе будет возникать ошибка
// Это плохая практика
// Так как 2 раза идет запрос к API
// 2 момент может быть такое что компонента не будет на странице но запросы все равно будут идти
// особенно если настроен интервал

// 3 момент 
// при пересоздании компонента- старый все еще будет находится в памяти ( проблема оптимизации - утечка памяти)


// Жизненный цикл компонентов
// Схема
// Компонент появился на странице -> Компонент обновился (new props / setState) -> Компонент удалился
// Этап ошибки - останавливает цикл 

// На каждом этапе ЖЦ компонента мы можем вызвать определенные функции 

// -- Хуки жизненного цикла ( leave circle hooks) --

// Компонент появился на странице  (componentDidMount()) -> Компонент обновился (componentDidUpdate()) -> Компонент удалился (componentWillUnmount())
// Этап ошибки (componentDidCatch())

// 1 часть - Монтирование 
// Когда появляется компонент вызывается constructor
// затем вызывается render()
// Затем Реакт обновляет DOM структуру и рефы
// затем вызывается componentDidMount()

// 2 часть - Обновление
// New props/ setState() / forceUpdate()
// затем вызывается render()
// Затем Реакт обновляет DOM структуру и рефы
// затем вызывается componentDidUpdate()

// Размонтирование 
// componentWillUnmount()

componentDidMount () {
    //вызов метода updareChar
    this.updareChar();
    this.timerId = setInterval(this.updareChar, 3000);
};
componentDidUpdate(){
    console.log('update');
};
componentWillUnmount(){
    clearInterval(this.timerId);
};